version: '3.8'

services:
  superset_db:
    image: postgres:17
    container_name: superset_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      # Правильно: superset_db_data: - определение тома, затем его использование
      - superset_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - superset_net

  superset_cache:
    image: redis:7
    container_name: superset_cache
    networks:
      - superset_net

  superset_app:
    build: .
    container_name: superset_app
    env_file:
      - .env
    environment:
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_HOST: superset_db
      DATABASE_PORT: 5432
      DATABASE_DB: ${POSTGRES_DB}
      REDIS_HOST: superset_cache
      REDIS_PORT: 6379
      SECRET_KEY: ${SUPERSET_SECRET_KEY}
      SUPERSET_HOME: /app/superset_home
    volumes:
      # Правильно: superset_home_data: - определение тома, затем его использование
      - superset_home_data:/app/superset_home
      # Монтируем папку dashboards, если нужно для ручного импорта YAML (не через CLI)
      - ./dashboards:/app/dashboards
      # Монтируем ZIP-архив dashboards.zip внутрь контейнера
      - ./dashboards.zip:/app/dashboards.zip
    ports:
      - "8088:8088"
    depends_on:
      superset_db:
        condition: service_healthy
      superset_cache:
        condition: service_started
    networks:
      - superset_net
  
    command: >
      bash -c "
        echo 'Инициализация базы данных Superset...' &&
        superset db upgrade &&
        echo 'Создание администратора...' &&
        superset fab create-admin --username ${ADMIN_USERNAME} --firstname Admin --lastname User --email ${ADMIN_EMAIL} --password ${ADMIN_PASSWORD} &&
        echo 'Инициализация Superset...' &&
        superset init &&
        # Проверяем, существует ли ZIP-архив dashboards.zip
        if [ -f /app/dashboards.zip ]; then
          echo 'Импортируем ZIP-архив дашбордов из /app/dashboards.zip через import_dashboards...';
          # Пытаемся импортировать ZIP-архив с помощью import_dashboards
          superset import_dashboards -p /app/dashboards.zip -u ${ADMIN_USERNAME} || echo 'Ошибка импорта дашбордов из ZIP через import_datasources — продолжаем работу';
        else
          echo 'Файл /app/dashboards.zip не найден, пропускаем импорт.';
        fi &&
        echo 'Запуск Superset через Gunicorn...' &&
        gunicorn -w 4 -k gevent --timeout 300 -b 0.0.0.0:8088 'superset.app:create_app()'"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8088/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:

  superset_db_data:  
  superset_home_data: 

networks:
  superset_net:
    driver: bridge